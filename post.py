"""
AES-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ/–¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ cryptography
–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã:
1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –æ–¥–∏–Ω —Ä–∞–∑ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ key.key
2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç: —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
3. –°–∫—Ä–∏–ø—Ç —á–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª, —à–∏—Ñ—Ä—É–µ—Ç –∏–ª–∏ –¥–µ—à–∏—Ñ—Ä—É–µ—Ç –µ–≥–æ
4. –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–º —Ñ–∞–π–ª–µ
"""

from cryptography.fernet import Fernet
import os

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞ (–µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç)
def generate_key():
    if not os.path.exists("key.key"):
        key = Fernet.generate_key()
        with open("key.key", "wb") as f:
            f.write(key)
        print("‚úÖ –ö–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ key.key")
    else:
        print("üîë –ö–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º key.key")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
def encrypt_file(filename):
    with open("key.key", "rb") as f:
        key = f.read()
    fernet = Fernet(key)

    with open(filename, "rb") as f:
        data = f.read()

    encrypted = fernet.encrypt(data)

    out_file = filename + ".enc"
    with open(out_file, "wb") as f:
        f.write(encrypted)
    print(f"‚úÖ –§–∞–π–ª –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω: {out_file}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
def decrypt_file(filename):
    with open("key.key", "rb") as f:
        key = f.read()
    fernet = Fernet(key)

    with open(filename, "rb") as f:
        encrypted = f.read()

    try:
        decrypted = fernet.decrypt(encrypted)
    except:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á –∏ —Ñ–∞–π–ª.")
        return

    if filename.endswith(".enc"):
        out_file = filename.replace(".enc", "")
    else:
        out_file = filename + ""

    with open(out_file, "wb") as f:
        f.write(decrypted)
    print(f"‚úÖ –§–∞–π–ª —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω: {out_file}")

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
def main():
    generate_key()
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1 ‚Äî –®–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª")
    print("2 ‚Äî –î–µ—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª")
    choice = input("–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2: ").strip()

    file_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ (—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º) –∏–ª–∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –Ω–µ–º—É (–µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –≤ –æ–¥–Ω–æ–π –ø–∞–ø–∫–µ —Å –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º): ").strip()

    if not os.path.exists(file_name):
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    if choice == "1":
        encrypt_file(file_name)
    elif choice == "2":
        decrypt_file(file_name)
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")

if __name__ == "__main__":
    main()